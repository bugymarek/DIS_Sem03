/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import AirCarCore.AirCarCore;
import static Constants.Constants.SimulationTime;
import Core.Command;
import Tests.FileWriter;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bugy
 */
public class App extends javax.swing.JDialog {

    /**
     * Creates new form App
     */
    public App(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setUp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField5 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextFieldOperators = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldMinibus = new javax.swing.JTextField();
        jTextFieldReplications = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldPercents = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jCheckBox1 = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jSliderSpeed = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        jSliderWaiting = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        jLabelSpeed = new javax.swing.JLabel();
        jLabelWaiting = new javax.swing.JLabel();
        jLabelProgress = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelRealTime = new javax.swing.JLabel();
        jLabelSimTime = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldArrivalCount = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldDepartureCount = new javax.swing.JTextField();
        jTextFieldMean = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldQueueT1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldQueueT2 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldQueueAirCar = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldFreeOperatorsCount = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextFieldInterval = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTextFieldStatMean = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jPanelMean = new javax.swing.JPanel();
        jTextFieldStatInterval = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanelMinibusesFixed = new javax.swing.JPanel();
        jPanelMinibusesFixedChart = new javax.swing.JPanel();
        jTextFieldStatMeanMinibusesFixed = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldStatOperatorsCount = new javax.swing.JTextField();
        jPanelOperatorsFixed = new javax.swing.JPanel();
        jPanelOperatorsFixedChart = new javax.swing.JPanel();
        jTextFieldStatMeanOperatorsFixed = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextStatMinibusesCount = new javax.swing.JTextField();

        jTextField5.setText("jTextField5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Simulačné nastavenia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jButton1.setText("Štart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Pauza");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextFieldOperators.setText("20");
        jTextFieldOperators.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOperatorsActionPerformed(evt);
            }
        });

        jLabel1.setText("Počet pracovníkov");

        jLabel2.setText("Počet minibusov");

        jTextFieldMinibus.setText("5");

        jTextFieldReplications.setText("30");
        jTextFieldReplications.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldReplicationsActionPerformed(evt);
            }
        });

        jLabel3.setText("Počet replikácií");

        jTextFieldPercents.setText("0");

        jLabel4.setText("Nezobraziť % replikácií ");

        jCheckBox1.setText("Turbo mod");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Žiadna", "Minibusy", "Pracovníci" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel5.setText("Fixna premenná");

        jSliderSpeed.setMaximum(3600);
        jSliderSpeed.setMinimum(1);
        jSliderSpeed.setValue(1);
        jSliderSpeed.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderSpeedStateChanged(evt);
            }
        });

        jLabel6.setText("Rýchlosť simulácie:");

        jSliderWaiting.setMaximum(1000);
        jSliderWaiting.setMinimum(1);
        jSliderWaiting.setValue(1);
        jSliderWaiting.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderWaitingStateChanged(evt);
            }
        });

        jLabel7.setText("Spomalenie:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldMinibus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldOperators, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel4)
                        .addComponent(jTextFieldReplications, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                        .addComponent(jTextFieldPercents))
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(408, 408, 408)
                        .addComponent(jLabelProgress))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jCheckBox1)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelSpeed))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jSliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelWaiting))
                                    .addComponent(jSliderWaiting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldOperators, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabelProgress))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldReplications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelSpeed)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelWaiting))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextFieldMinibus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jTextFieldPercents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox1)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jSliderSpeed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSliderWaiting, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aktuálna replikácia", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel8.setText("Realný čas:");

        jLabel9.setText("Simulačný čas:");

        jLabelRealTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabelSimTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setText("Prišli do systému");

        jLabel11.setText("Odišli zo systému");

        jLabel12.setText("Priemerný čas v systéme");

        jLabel13.setText("Počet v rade T1");

        jLabel14.setText("Počet v rade T2");

        jLabel15.setText("Počet v rade požičovna");

        jLabel16.setText("Počet voľných pracovníkov");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel17.setText("90% interval spoľahlivosti");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldMean, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldArrivalCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldDepartureCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldQueueT1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldQueueT2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldQueueAirCar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelRealTime, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(jLabelSimTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldFreeOperatorsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldInterval))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldQueueAirCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                            .addComponent(jLabelRealTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelSimTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldMean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldArrivalCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDepartureCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldQueueT1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldQueueT2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFreeOperatorsCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sumárne štatistiky", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jLabel18.setText("Priemerný čas v systéme");

        javax.swing.GroupLayout jPanelMeanLayout = new javax.swing.GroupLayout(jPanelMean);
        jPanelMean.setLayout(jPanelMeanLayout);
        jPanelMeanLayout.setHorizontalGroup(
            jPanelMeanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelMeanLayout.setVerticalGroup(
            jPanelMeanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        jLabel19.setText("90% interval spoľahlivosti");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldStatMean, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(0, 194, Short.MAX_VALUE))
                            .addComponent(jTextFieldStatInterval))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldStatMean, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldStatInterval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelMean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Priem. čas v systéme", jPanel4);

        javax.swing.GroupLayout jPanelMinibusesFixedChartLayout = new javax.swing.GroupLayout(jPanelMinibusesFixedChart);
        jPanelMinibusesFixedChart.setLayout(jPanelMinibusesFixedChartLayout);
        jPanelMinibusesFixedChartLayout.setHorizontalGroup(
            jPanelMinibusesFixedChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        jPanelMinibusesFixedChartLayout.setVerticalGroup(
            jPanelMinibusesFixedChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        jLabel20.setText("Priemerný čas v systéme");

        jLabel22.setText("Počet praconíkov");

        javax.swing.GroupLayout jPanelMinibusesFixedLayout = new javax.swing.GroupLayout(jPanelMinibusesFixed);
        jPanelMinibusesFixed.setLayout(jPanelMinibusesFixedLayout);
        jPanelMinibusesFixedLayout.setHorizontalGroup(
            jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinibusesFixedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMinibusesFixedChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelMinibusesFixedLayout.createSequentialGroup()
                        .addGroup(jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldStatMeanMinibusesFixed, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelMinibusesFixedLayout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(0, 237, Short.MAX_VALUE))
                            .addComponent(jTextFieldStatOperatorsCount))))
                .addContainerGap())
        );
        jPanelMinibusesFixedLayout.setVerticalGroup(
            jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMinibusesFixedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMinibusesFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelMinibusesFixedLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldStatMeanMinibusesFixed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelMinibusesFixedLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldStatOperatorsCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelMinibusesFixedChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fixné minibusy", jPanelMinibusesFixed);

        javax.swing.GroupLayout jPanelOperatorsFixedChartLayout = new javax.swing.GroupLayout(jPanelOperatorsFixedChart);
        jPanelOperatorsFixedChart.setLayout(jPanelOperatorsFixedChartLayout);
        jPanelOperatorsFixedChartLayout.setHorizontalGroup(
            jPanelOperatorsFixedChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 658, Short.MAX_VALUE)
        );
        jPanelOperatorsFixedChartLayout.setVerticalGroup(
            jPanelOperatorsFixedChartLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 302, Short.MAX_VALUE)
        );

        jLabel21.setText("Priemerný čas v systéme");

        jLabel23.setText("Počet minibusov");

        javax.swing.GroupLayout jPanelOperatorsFixedLayout = new javax.swing.GroupLayout(jPanelOperatorsFixed);
        jPanelOperatorsFixed.setLayout(jPanelOperatorsFixedLayout);
        jPanelOperatorsFixedLayout.setHorizontalGroup(
            jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperatorsFixedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelOperatorsFixedChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelOperatorsFixedLayout.createSequentialGroup()
                        .addGroup(jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldStatMeanOperatorsFixed, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOperatorsFixedLayout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(0, 242, Short.MAX_VALUE))
                            .addComponent(jTextStatMinibusesCount))))
                .addContainerGap())
        );
        jPanelOperatorsFixedLayout.setVerticalGroup(
            jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOperatorsFixedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperatorsFixedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOperatorsFixedLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldStatMeanOperatorsFixed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOperatorsFixedLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextStatMinibusesCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelOperatorsFixedChart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Fixní pracovníci", jPanelOperatorsFixed);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jSliderSpeedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderSpeedStateChanged
        double value = jSliderSpeed.getValue();

        if (AirCarCore != null) {
            AirCarCore.setStep(value);
        }
        if (value >= 60 * 60) {
            jLabelSpeed.setText(Double.toString(Math.round((value / (60.0 * 60.0)) * 100.0) / 100.0) + " h");
            return;
        }
        if (value >= 60) {
            jLabelSpeed.setText(Double.toString(Math.round(value / 60 * 100.0) / 100.0) + " min");
            return;
        }
        jLabelSpeed.setText(Double.toString(value) + " s");

    }//GEN-LAST:event_jSliderSpeedStateChanged

    private void jSliderWaitingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderWaitingStateChanged
        jLabelWaiting.setText(Integer.toString(jSliderWaiting.getValue()));
        if (AirCarCore != null) {
            AirCarCore.setWait(jSliderWaiting.getValue());
        }
    }//GEN-LAST:event_jSliderWaitingStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.setEnabled(false);
        jComboBox1.setEnabled(false);
        Stop = false;
        this.Min = Double.MAX_VALUE;
        this.Max = 0;
        int operators = Integer.parseInt(jTextFieldOperators.getText());
        int minibuses = Integer.parseInt(jTextFieldMinibus.getText());
        int replications = Integer.parseInt(jTextFieldReplications.getText());
        int percents = Integer.parseInt(jTextFieldPercents.getText());
        jLabelProgress.setText("0/" + replications);
        jProgressBar1.setMaximum(replications);
        jProgressBar1.setValue(0);

        int selectedItem = jComboBox1.getSelectedIndex();
        switch (selectedItem) {
            case 0:
                Chart = new Chart(jPanelMean, "Priem. čas v systéme", "Priemerný čas zákaznika v systéme", "Počet replikácií", "Priemer v minútach");
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(0);
                Thread t = new Thread(() -> {
                    startSimulationThread(minibuses, operators, replications, percents, selectedItem);
                    setAfterSimulation();
                });
                t.start();
                break;
            case 1:
                FW = new FileWriter("C:/Users/Bugy/Documents/NetBeansProjects/DIS_Sem02/src/fixMinibusy" + minibuses + ".csv");
                FW.addRow(createHeaderRow());
                Chart = new Chart(jPanelMinibusesFixedChart, "Priem. čas v systéme od počtu pracovníkov", "Priemerný čas zákaznika v systéme - fixný počet autobusov", "Počet pracovníkov", "Priemer v minútach");
                jTabbedPane1.setEnabledAt(0, false);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(1);
                jTextFieldMinibus.setEnabled(false);
                jTextFieldReplications.setEnabled(false);
                jTextFieldOperators.setEnabled(true);
                Thread t2 = new Thread(() -> {
                    int o = operators;
                    while (!Stop) {
                        startSimulationThread(minibuses, o, replications, percents, selectedItem);
                        o++;
                    }
                    setAfterSimulation();
                });
                t2.start();
                break;
            case 2:
                FW = new FileWriter("C:/Users/Bugy/Documents/NetBeansProjects/DIS_Sem02/src/fixPracovnici" + operators + ".csv");
                FW.addRow(createHeaderRow());
                Chart = new Chart(jPanelOperatorsFixedChart, "Priem. čas v systéme od počtu minibusov", "Priemerný čas zákaznika v systéme - fixný počet praconíkov", "Počet minibusov", "Priemer v minútach");
                jTabbedPane1.setEnabledAt(0, false);
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setSelectedIndex(2);
                jTextFieldMinibus.setEnabled(true);
                jTextFieldReplications.setEnabled(false);
                jTextFieldOperators.setEnabled(false);
                Thread t3 = new Thread(() -> {
                    int m = minibuses;
                    while (!Stop) {
                        startSimulationThread(m, operators, replications, percents, selectedItem);
                        m++;
                    }
                    setAfterSimulation();
                });
                t3.start();
                break;
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldReplicationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldReplicationsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldReplicationsActionPerformed

    private void jTextFieldOperatorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOperatorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOperatorsActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (AirCarCore != null && AirCarCore.isRunnable()) {
            if (AirCarCore.isPause()) {
                AirCarCore.setPause(false);
                jButton3.setText("Pauza");
            } else {
                AirCarCore.setPause(true);
                jButton3.setText("Pokračuj");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jButton3.setText("Pauza");
        Stop = true;
        if (AirCarCore != null) {
            AirCarCore.setRunnable(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        int selectedItem = jComboBox1.getSelectedIndex();
        switch (selectedItem) {
            case 0:
                jTextFieldMinibus.setEnabled(true);
                jTextFieldOperators.setEnabled(true);
                break;
            case 1:
                jTextFieldMinibus.setEnabled(false);
                jTextFieldOperators.setEnabled(true);
                break;
            case 2:
                jTextFieldOperators.setEnabled(false);
                jTextFieldMinibus.setEnabled(true);
                break;
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged

    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        if (AirCarCore != null) {
            if (jCheckBox1.isSelected()) {
                AirCarCore.setMonitoring(false);
            } else {
                AirCarCore.setMonitoring(true);
            }
        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                App dialog = new App(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void startSimulationThread(int minibuses, int operators, int replications, int percents, int selectedItem) {
        AirCarCore = new AirCarCore(minibuses, operators, true);
        Command c = createCommand(AirCarCore, percents, selectedItem);
        AirCarCore.setCommand(c);
        AirCarCore.setStep(jSliderSpeed.getValue());
        AirCarCore.setWait(jSliderWaiting.getValue());
        AirCarCore.setMonitoring(!jCheckBox1.isSelected());
        AirCarCore.doReprications(replications, SimulationTime);
    }

    private void setUp() {
        jLabelWaiting.setText(Integer.toString(jSliderWaiting.getValue()));
        jLabelSpeed.setText(Integer.toString(jSliderSpeed.getValue()) + " s");
        jTextFieldArrivalCount.setEditable(false);
        jTextFieldDepartureCount.setEditable(false);
        jTextFieldInterval.setEditable(false);
        jTextFieldFreeOperatorsCount.setEditable(false);
        jTextFieldMean.setEditable(false);
        DefTableModel = new DefaultTableModel(0, 0);
        String header[] = new String[]{"Id minibusu", "Pozícia", "Počet pasažierov"};
        DefTableModel.setColumnIdentifiers(header);
        jTable1.setModel(DefTableModel);   
    }

    private AirCarCore AirCarCore;
    private DefaultTableModel DefTableModel;
    private Chart Chart;
    private double Min;
    private double Max;
    private boolean Stop = false;
    private FileWriter FW;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelProgress;
    private javax.swing.JLabel jLabelRealTime;
    private javax.swing.JLabel jLabelSimTime;
    private javax.swing.JLabel jLabelSpeed;
    private javax.swing.JLabel jLabelWaiting;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelMean;
    private javax.swing.JPanel jPanelMinibusesFixed;
    private javax.swing.JPanel jPanelMinibusesFixedChart;
    private javax.swing.JPanel jPanelOperatorsFixed;
    private javax.swing.JPanel jPanelOperatorsFixedChart;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSliderSpeed;
    private javax.swing.JSlider jSliderWaiting;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextFieldArrivalCount;
    private javax.swing.JTextField jTextFieldDepartureCount;
    private javax.swing.JTextField jTextFieldFreeOperatorsCount;
    private javax.swing.JTextField jTextFieldInterval;
    private javax.swing.JTextField jTextFieldMean;
    private javax.swing.JTextField jTextFieldMinibus;
    private javax.swing.JTextField jTextFieldOperators;
    private javax.swing.JTextField jTextFieldPercents;
    private javax.swing.JTextField jTextFieldQueueAirCar;
    private javax.swing.JTextField jTextFieldQueueT1;
    private javax.swing.JTextField jTextFieldQueueT2;
    private javax.swing.JTextField jTextFieldReplications;
    private javax.swing.JTextField jTextFieldStatInterval;
    private javax.swing.JTextField jTextFieldStatMean;
    private javax.swing.JTextField jTextFieldStatMeanMinibusesFixed;
    private javax.swing.JTextField jTextFieldStatMeanOperatorsFixed;
    private javax.swing.JTextField jTextFieldStatOperatorsCount;
    private javax.swing.JTextField jTextStatMinibusesCount;
    // End of variables declaration//GEN-END:variables

    private Command createCommand(AirCarCore core, int cutPercents, int selectedItem) {
        Command c = new Command() {
            @Override
            public void run() {
                jLabelRealTime.setText((int) Math.floor(core.getCurrentTime() / (60.0 * 60.0 * 24.0)) + " d " + (int) Math.floor(core.getCurrentTime() / (60.0 * 60.0) % 24.0) + " h " + (int) Math.floor((core.getCurrentTime() / 60.0) % 60.0) + " min " + String.format("%.0f", (core.getCurrentTime() % 60.0)) + " sec");
                jLabelSimTime.setText(AirCarCore.getCurrentTime() + " s");

                if (jProgressBar1.getValue() != AirCarCore.getCurrentExperiment()) {
                    jProgressBar1.setValue((int) AirCarCore.getCurrentExperiment());
                    jLabelProgress.setText((int) AirCarCore.getCurrentExperiment() + "/" + (int) AirCarCore.getReplicationsCount());
                }

                if (AirCarCore.isMonitoring()) {

                    jTextFieldArrivalCount.setText(Integer.toString((int) AirCarCore.getArrivalCustomersCount()));
                    jTextFieldDepartureCount.setText(Integer.toString((int) AirCarCore.getDepartureCustomersCount()));

                    jTextFieldMean.setText((int) Math.floor((core.getResult() / 60.0) % 60.0) + " min " + String.format("%.0f", (core.getResult() % 60.0)) + " sec");

                    jTextFieldQueueT1.setText(Integer.toString(AirCarCore.getCustomerQueueT1Size()));

                    jTextFieldQueueT2.setText(Integer.toString(AirCarCore.getCustomerQueueT2Size()));

                    jTextFieldQueueAirCar.setText(Integer.toString(AirCarCore.getCustomerQueueRentalSize()));

                    int i = AirCarCore.getFreeOperatorsCount();
                    jTextFieldFreeOperatorsCount.setText(Integer.toString(AirCarCore.getFreeOperatorsCount()));

                    SwingUtilities.invokeLater(new Runnable() {
                        @Override
                        public void run() {
                            DefTableModel.setRowCount(0);
                            for (int i = 0; i < AirCarCore.getMiniBusesCount(); i++) {
                                Vector<Object> data = new Vector<>();
                                data.add(AirCarCore.getMinibus(i).getID());
                                data.add(AirCarCore.getMinibus(i).getPosition());
                                data.add(AirCarCore.getMinibus(i).getSize());
                                DefTableModel.addRow(data);
                            }
                        }
                    });

                    jTextFieldInterval.setText(core.getInterval(AirCarCore.getCurrentExperiment()));
                }

                double firstReplication = core.getReplicationsCount() / 100 * cutPercents;
                if (core.getCurrentExperiment() > firstReplication && core.isReplicationDone()) {
                    switch (selectedItem) {
                        case 0:
                            Chart.addValueToSeries(0, AirCarCore.getCurrentExperiment(), AirCarCore.getCurrentMean() / 60.0);
                            jTextFieldStatMean.setText(String.format("%.3f min", core.getCurrentMean()/ 60.0) + " = " + (int) Math.floor((AirCarCore.getCurrentMean() / 60.0) % 60.0) + " min " + String.format("%.0f", (core.getCurrentMean() % 60.0)) + " sec");
                            jTextFieldStatInterval.setText(core.getInterval(AirCarCore.getCurrentExperiment()));
                            AirCarCore.setMinMax();
                            setMinMax(AirCarCore.getMinValue() / 60.0, AirCarCore.getMaxValue() / 60.0);
                            Chart.changeRange(Min, Max);
                            break;
                        case 1:
                            if (core.getCurrentExperiment() == core.getReplicationsCount()) {
                                Chart.addValueToSeries(0, AirCarCore.getFreeOperatorsCount(), AirCarCore.getCurrentMean() / 60.0);
                                jTextFieldStatMeanMinibusesFixed.setText(String.format("%.3f min", core.getCurrentMean()/ 60.0) + " = " + (int) Math.floor((AirCarCore.getCurrentMean() / 60.0) % 60.0) + " min " + String.format("%.0f", (core.getCurrentMean() % 60.0)) + " sec");
                                FW.addRow(createRowForExport());
                                jTextFieldStatOperatorsCount.setText(Integer.toString(core.getFreeOperatorsCount()));
                                AirCarCore.setMinMax();
                                setMinMax(AirCarCore.getMinValue() / 60.0, AirCarCore.getMaxValue() / 60.0);
                                Chart.changeRange(Min, Max);
                            }
                            break;
                        case 2:
                            if (core.getCurrentExperiment() == core.getReplicationsCount()) {
                                Chart.addValueToSeries(0, AirCarCore.getMiniBusesCount(), AirCarCore.getCurrentMean() / 60.0);
                                jTextFieldStatMeanOperatorsFixed.setText(String.format("%.3f min", core.getCurrentMean()/ 60.0) + " = " + (int) Math.floor((AirCarCore.getCurrentMean() / 60.0) % 60.0) + " min " + String.format("%.0f", (core.getCurrentMean() % 60.0)) + " sec");
                                FW.addRow(createRowForExport());
                                jTextStatMinibusesCount.setText(Integer.toString(core.getMiniBusesCount()));
                                AirCarCore.setMinMax();
                                setMinMax(AirCarCore.getMinValue() / 60.0, AirCarCore.getMaxValue() / 60.0);
                                Chart.changeRange(Min, Max);
                            }
                            break;
                    }
                }
            }
        };
        return c;
    }

    private void setMinMax(double actualMin, double actualMax) {
        if (actualMin < Min) {
            Min = actualMin;
        }
        if (actualMax > Max) {
            Max = actualMax;
        }
        if (Min == Max) {
            Max += 0.000001;
        }
    }
    
    private List<String> createRowForExport(){
        ArrayList<String> result = new ArrayList<>();
        result.add(String.valueOf(AirCarCore.getFreeOperatorsCount()));
        result.add(String.valueOf(AirCarCore.getMiniBusesCount()));
        result.add(String.format("%.3f min", AirCarCore.getCurrentMean()/ 60.0));
        result.add(String.valueOf(AirCarCore.getInterval(AirCarCore.getCurrentExperiment())));
        return result;
    }
    
    private List<String> createHeaderRow(){
        ArrayList<String> result = new ArrayList<>();
        result.add("Pracovnici");
        result.add("Minibusy");
        result.add("Priem. cas v systéme");
        result.add("Interval spolahlivosti");
        return result;
    }
    

    private void setAfterSimulation() {
        jButton1.setEnabled(true);
        jComboBox1.setEnabled(true);
        jTextFieldReplications.setEnabled(true);
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, true);
        jTabbedPane1.setEnabledAt(2, true);
    }
}
